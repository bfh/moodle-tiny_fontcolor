define("tiny_bfhfontcolor/options",["exports","editor_tiny/options","./common","./colorswat"],(function(_exports,_options,_common,_colorswat){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.register=_exports.isForecolorPickerOn=_exports.isBackcolorPickerOn=_exports.getForecolorMap=_exports.getBackcolorMap=void 0;
/**
   * Options helper for BFH Fontcolor plugin.
   *
   * @module      tiny_equation/options
   * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>
   * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const forecolorMap=(0,_options.getPluginOptionName)(_common.pluginName,"tinytextcolors"),backcolorMap=(0,_options.getPluginOptionName)(_common.pluginName,"tinytextbackgroundcolors"),forecolorPicker=(0,_options.getPluginOptionName)(_common.pluginName,"tinytextcolorpicker"),backcolorPicker=(0,_options.getPluginOptionName)(_common.pluginName,"tinytextbackgroundcolorpicker");_exports.register=editor=>{editor.options.register(forecolorMap,{processor:value=>(0,_colorswat.isArrayOf)(value,_colorswat.isString)?{value:(0,_colorswat.mapColors)(value),valid:!0}:{valid:!1,message:"Must be an array of strings."},default:[]}),editor.options.register(backcolorMap,{processor:value=>(0,_colorswat.isArrayOf)(value,_colorswat.isString)?{value:(0,_colorswat.mapColors)(value),valid:!0}:{valid:!1,message:"Must be an array of strings."},default:[]}),editor.options.register(forecolorPicker,{processor:"boolean",default:!1}),editor.options.register(backcolorPicker,{processor:"boolean",default:!1})};_exports.getForecolorMap=editor=>editor.options.get(forecolorMap);_exports.getBackcolorMap=editor=>editor.options.get(backcolorMap);_exports.isForecolorPickerOn=editor=>editor.options.get(forecolorPicker);_exports.isBackcolorPickerOn=editor=>editor.options.get(backcolorPicker)}));

//# sourceMappingURL=options.min.js.map