{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_bfhfontcolor plugin.\n *\n * @module      tiny_bfhfontcolor/commands\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {\n    fgButtonName,\n    bgButtonName,\n    component,\n} from './common';\n\n/**\n * Handle the action for your plugin.\n * @param {TinyMCE.editor} editor The tinyMCE editor instance.\n * @param {string} texttype whether fg or bg color change to apply\n */\nconst handleAction = (editor, texttype) => {\n    // TODO Handle the action.\n    window.console.log(editor);\n    window.console.log(texttype);\n};\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    const [\n        menuItemFgcolor,\n        menuItemBgcolor,\n    ] = await Promise.all([\n        getString('menuItemFgcolor', component),\n        getString('menuItemBgcolor', component),\n    ]);\n\n    return (editor) => {\n        editor.ui.registry.addMenuItem(fgButtonName, {\n            icon: 'text-color',\n            text: menuItemFgcolor,\n            onAction: () => handleAction(editor, 'fgcolor'),\n        });\n        editor.ui.registry.addMenuItem(bgButtonName, {\n            icon: 'highlight-bg-color',\n            text: menuItemBgcolor,\n            onAction: () => handleAction(editor, 'bgcolor'),\n        });\n        editor.ui.registry.addButton(fgButtonName, {\n            icon: 'text-color',\n            tooltip: menuItemFgcolor,\n            onAction: () => handleAction(editor, 'fgcolor'),\n        });\n        editor.ui.registry.addButton(bgButtonName, {\n            icon: 'highlight-bg-color',\n            tooltip: menuItemBgcolor,\n            onAction: () => handleAction(editor, 'bgcolor'),\n        });\n    };\n};\n"],"names":["handleAction","editor","texttype","window","console","log","async","menuItemFgcolor","menuItemBgcolor","Promise","all","component","ui","registry","addMenuItem","fgButtonName","icon","text","onAction","bgButtonName","addButton","tooltip"],"mappings":";;;;;;;;MAmCMA,aAAe,CAACC,OAAQC,YAE1BC,OAAOC,QAAQC,IAAIJ,QACnBE,OAAOC,QAAQC,IAAIH,6BAWCI,gBAEhBC,gBACAC,uBACMC,QAAQC,IAAI,EAClB,mBAAU,kBAAmBC,oBAC7B,mBAAU,kBAAmBA,4BAGzBV,SACJA,OAAOW,GAAGC,SAASC,YAAYC,qBAAc,CACzCC,KAAM,aACNC,KAAMV,gBACNW,SAAU,IAAMlB,aAAaC,OAAQ,aAEzCA,OAAOW,GAAGC,SAASC,YAAYK,qBAAc,CACzCH,KAAM,qBACNC,KAAMT,gBACNU,SAAU,IAAMlB,aAAaC,OAAQ,aAEzCA,OAAOW,GAAGC,SAASO,UAAUL,qBAAc,CACvCC,KAAM,aACNK,QAASd,gBACTW,SAAU,IAAMlB,aAAaC,OAAQ,aAEzCA,OAAOW,GAAGC,SAASO,UAAUD,qBAAc,CACvCH,KAAM,qBACNK,QAASb,gBACTU,SAAU,IAAMlB,aAAaC,OAAQ"}