{"version":3,"file":"colorswat.min.js","sources":["../src/colorswat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Color palette setter for BFH Fontcolor plugin.\n * This code is mostly reused from the TinyMCE silver theme. However, this\n * code is enhanced to have two different color maps for background and\n * text color. Also, the option to enable or disable custom colors\n * via a colorpicker can be set independently on both text- and\n * background color. If the colorpicker is disabled and the color\n * map is empty for one of the text- or background color, the menu entry as\n * well as the toolbar button will not appear in the editor.\n *\n * @module      tiny_bfhfontcolor\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// ESLint directives.\n\nimport * as pf from './polyfill';\nimport {getBackcolorMap, getForecolorMap, isBackcolorPickerOn, isForecolorPickerOn} from './options';\n\nlet global$4 = localStorage;\n\nconst map$2 = (xs, f) => {\n  const len = xs.length;\n  const r = new Array(len);\n  for (let i = 0; i < len; i++) {\n    const x = xs[i];\n    r[i] = f(x, i);\n  }\n  return r;\n};\n\nconst Cell = initial => {\n  let value = initial;\n  const get = () => {\n    return value;\n  };\n  const set = v => {\n    value = v;\n  };\n  return {\n    get,\n    set\n  };\n};\n\nconst fireTextColorChange = (editor, data) => {\n  editor.dispatch('TextColorChange', data);\n};\n\nconst storageName = 'tinymce-custom-colors';\nconst ColorCache = (max = 10, suffix = '') => {\n  const storageString = global$4.getItem(storageName + suffix);\n  const localstorage = pf.isString(storageString) ? JSON.parse(storageString) : [];\n  const prune = list => {\n    const diff = max - list.length;\n    return diff < 0 ? list.slice(0, max) : list;\n  };\n  const cache = prune(localstorage);\n  const add = key => {\n    pf.indexOf(cache, key).each(remove);\n    cache.unshift(key);\n    if (cache.length > max) {\n      cache.pop();\n    }\n    global$4.setItem(storageName, JSON.stringify(cache));\n  };\n  const remove = idx => {\n    cache.splice(idx, 1);\n  };\n  const state = () => cache.slice(0);\n  return {\n    add,\n    state\n  };\n};\n\n// eslint-disable-next-line\nconst colorCache = ColorCache(10);\n// eslint-disable-next-line\nconst colorCacheBg = ColorCache(10, '-background');\n\nconst option$1 = name => editor => editor.options.get(name);\n\nconst getColorCols$1 = option$1('color_cols');\nconst getColors$3 = (editor, name) => {\n  if (name === 'bfh_forecolor') {\n    return getForecolorMap(editor);\n  }\n  return getBackcolorMap(editor);\n};\nconst getCurrentColors = (type) => map$2(type === 'bfh_forecolor' ? colorCache.state() : colorCacheBg.state(), color => ({\n  type: 'choiceitem',\n  text: color,\n  value: color\n}));\nconst addColor = color => {\n  colorCache.add(color);\n};\n\nconst fallbackColor = '#000000';\nconst hasStyleApi = node => pf.isNonNullable(node.style);\nconst getCurrentColor = (editor, format) => {\n  let color;\n  editor.dom.getParents(editor.selection.getStart(), elm => {\n    const value = hasStyleApi(elm) ? elm.style[format === 'bfh_forecolor' ? 'color' : 'backgroundColor'] : null;\n    if (value) {\n      color = color ? color : value;\n    }\n  });\n  return pf.Optional.from(color);\n};\nconst applyFormat = (editor, format, value) => {\n  editor.undoManager.transact(() => {\n    editor.focus();\n    editor.formatter.apply(format, {value});\n    editor.nodeChanged();\n  });\n};\nconst removeFormat = (editor, format) => {\n  editor.undoManager.transact(() => {\n    editor.focus();\n    editor.formatter.remove(format, {value: null}, undefined, true);\n    editor.nodeChanged();\n  });\n};\nconst registerCommands = editor => {\n  editor.addCommand('mceApplyTextcolor', (format, value) => {\n    applyFormat(editor, format, value);\n  });\n  editor.addCommand('mceRemoveTextcolor', format => {\n    removeFormat(editor, format);\n  });\n};\nconst getAdditionalColors = hasCustom => {\n  const type = 'choiceitem';\n  const remove = {\n    type,\n    text: 'Remove color',\n    icon: 'color-swatch-remove-color',\n    value: 'remove'\n  };\n  const custom = {\n    type,\n    text: 'Custom color',\n    icon: 'color-picker',\n    value: 'custom'\n  };\n  return hasCustom ? [\n    remove,\n    custom\n  ] : [remove];\n};\nconst applyColor = (editor, format, value, onChoice) => {\n  if (value === 'custom') {\n    const dialog = colorPickerDialog(editor);\n    dialog(colorOpt => {\n      colorOpt.each(color => {\n        addColor(color);\n        editor.execCommand('mceApplyTextcolor', format, color);\n        onChoice(color);\n      });\n    }, fallbackColor);\n  } else if (value === 'remove') {\n    onChoice('');\n    editor.execCommand('mceRemoveTextcolor', format);\n  } else {\n    onChoice(value);\n    editor.execCommand('mceApplyTextcolor', format, value);\n  }\n};\nconst getColors$1 = (colors, hasCustom, type) => colors.concat(getCurrentColors(type).concat(getAdditionalColors(hasCustom)));\nconst getFetch$1 = (colors, hasCustom, type) => callback => {\n  callback(getColors$1(colors, hasCustom, type));\n};\nconst setIconColor = (splitButtonApi, name, newColor) => {\n  const id = name === 'bfh_forecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\n  splitButtonApi.setIconFill(id, newColor);\n};\nconst registerTextColorButton = (editor, name, format, tooltip, lastColor) => {\n  let iconName, hasCustom;\n  if (name === 'bfh_forecolor') {\n    iconName = 'text-color';\n    hasCustom = isForecolorPickerOn(editor);\n  } else {\n    iconName = 'highlight-bg-color';\n    hasCustom = isBackcolorPickerOn(editor);\n  }\n  editor.ui.registry.addSplitButton(name, {\n    tooltip,\n    presets: 'color',\n    icon: iconName,\n    select: value => {\n      const optCurrentRgb = getCurrentColor(editor, format);\n      return optCurrentRgb.bind(currentRgb => pf.fromString(currentRgb).map(rgba => {\n        const currentHex = pf.fromRgba(rgba).value;\n        return pf.contains$1(value.toLowerCase(), currentHex);\n      })).getOr(false);\n    },\n    columns: getColorCols$1(editor),\n    fetch: getFetch$1(getColors$3(editor, name), hasCustom, name),\n    onAction: () => {\n      applyColor(editor, format, lastColor.get(), pf.noop);\n    },\n    onItemAction: (_splitButtonApi, value) => {\n      applyColor(editor, format, value, newColor => {\n        lastColor.set(newColor);\n        fireTextColorChange(editor, {\n          name,\n          color: newColor\n        });\n      });\n    },\n    onSetup: splitButtonApi => {\n      setIconColor(splitButtonApi, name, lastColor.get());\n      const handler = e => {\n        if (e.name === name) {\n          setIconColor(splitButtonApi, e.name, e.color);\n        }\n      };\n      editor.on('TextColorChange', handler);\n      return () => {\n        editor.off('TextColorChange', handler);\n      };\n    }\n  });\n};\nconst registerTextColorMenuItem = (editor, name, format, text) => {\n  editor.ui.registry.addNestedMenuItem(name, {\n    text,\n    icon: name === 'bfh_forecolor' ? 'text-color' : 'highlight-bg-color',\n    getSubmenuItems: () => [{\n      type: 'fancymenuitem',\n      fancytype: 'colorswatch',\n      initData: {\n        allowCustomColors: name === 'bfh_forecolor' ? isForecolorPickerOn(editor) : isBackcolorPickerOn(editor),\n        colors: getColors$3(editor, name),\n      },\n      onAction: data => {\n        applyColor(editor, format, data.value, pf.noop);\n      }\n    }]\n  });\n};\nconst colorPickerDialog = editor => (callback, value) => {\n  let isValid = false;\n  const onSubmit = api => {\n    const data = api.getData();\n    const hex = data.colorpicker;\n    if (isValid) {\n      callback(pf.Optional.from(hex));\n      api.close();\n    } else {\n      editor.windowManager.alert(editor.translate([\n        'Invalid hex color code: {0}',\n        hex\n      ]));\n    }\n  };\n  const onAction = (_api, details) => {\n    if (details.name === 'hex-valid') {\n      isValid = details.value;\n    }\n  };\n  const initialData = {colorpicker: value};\n  editor.windowManager.open({\n    title: 'Color Picker',\n    size: 'normal',\n    body: {\n      type: 'panel',\n      items: [{\n        type: 'colorpicker',\n        name: 'colorpicker',\n        label: 'Color'\n      }]\n    },\n    buttons: [\n      {\n        type: 'cancel',\n        name: 'cancel',\n        text: 'Cancel'\n      },\n      {\n        type: 'submit',\n        name: 'save',\n        text: 'Save',\n        primary: true\n      }\n    ],\n    initialData,\n    onAction,\n    onSubmit,\n    onClose: pf.noop,\n    onCancel: () => {\n      callback(pf.Optional.none());\n    }\n  });\n};\nconst register$c = editor => {\n  if (!isForecolorPickerOn(editor) && !isBackcolorPickerOn(editor)\n    && getForecolorMap(editor).length === 0 && getBackcolorMap(editor).length === 0) {\n    return;\n  }\n  registerCommands(editor);\n  if (isForecolorPickerOn(editor) || getForecolorMap(editor).length > 0) {\n    // eslint-disable-next-line\n    const lastForeColor = Cell(fallbackColor);\n    registerTextColorButton(editor, 'bfh_forecolor', 'forecolor', 'Text color', lastForeColor);\n    registerTextColorMenuItem(editor, 'bfh_forecolor', 'forecolor', 'Text color');\n  }\n  if (isBackcolorPickerOn(editor) || getBackcolorMap(editor).length > 0) {\n    // eslint-disable-next-line\n    const lastBackColor = Cell(fallbackColor);\n    registerTextColorButton(editor, 'bfh_backcolor', 'hilitecolor', 'Background color', lastBackColor);\n    registerTextColorMenuItem(editor, 'bfh_backcolor', 'hilitecolor', 'Background color');\n  }\n};\n\nexport {\n  registerTextColorButton,\n  register$c\n};"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","pf","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","global$4","localStorage","Cell","initial","value","v","storageName","ColorCache","max","arguments","length","undefined","suffix","storageString","getItem","localstorage","isString","JSON","parse","list","slice","remove","idx","splice","add","indexOf","each","unshift","pop","setItem","stringify","state","colorCache","colorCacheBg","getColorCols$1","name","editor","options","getColors$3","getForecolorMap","getBackcolorMap","getCurrentColors","type","map$2","xs","f","len","r","Array","i","x","color","text","getCurrentColor","format","dom","getParents","selection","getStart","elm","node","isNonNullable","style","Optional","from","applyColor","onChoice","colorPickerDialog","dialog","colorOpt","addColor","execCommand","getFetch$1","colors","hasCustom","callback","getColors$1","concat","icon","getAdditionalColors","setIconColor","splitButtonApi","newColor","id","setIconFill","registerTextColorButton","tooltip","lastColor","iconName","isForecolorPickerOn","isBackcolorPickerOn","ui","registry","addSplitButton","presets","select","bind","currentRgb","fromString","map","rgba","currentHex","fromRgba","contains$1","toLowerCase","getOr","columns","fetch","onAction","noop","onItemAction","_splitButtonApi","fireTextColorChange","data","dispatch","onSetup","handler","e","on","off","_exports","registerTextColorMenuItem","addNestedMenuItem","getSubmenuItems","fancytype","initData","allowCustomColors","isValid","initialData","colorpicker","windowManager","open","title","size","body","items","label","buttons","primary","_api","details","onSubmit","api","hex","getData","close","alert","translate","onClose","onCancel","none","register$c","addCommand","applyFormat","undoManager","transact","focus","formatter","apply","nodeChanged","removeFormat","registerCommands","lastForeColor","lastBackColor"],"mappings":"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"}