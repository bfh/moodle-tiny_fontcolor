{"version":3,"file":"colorswat.min.js","sources":["../src/colorswat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Color palette setter for BFH Fontcolor plugin.\n * This code is mostly reused from the TinyMCE silver theme. However, this\n * code is enhanced to have two different color maps for background and\n * text color. Also, the option to enable or disable custom colors\n * via a colorpicker can be set independently on both text- and\n * background color. If the colorpicker is disabled and the color\n * map is empty for one of the text- or background color, the menu entry as\n * well as the toolbar button will not appear in the editor.\n *\n * @module      tiny_bfhfontcolor/colorswat\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// ESLint directives.\n\nimport {getBackcolorMap, getForecolorMap, isBackcolorPickerOn, isForecolorPickerOn} from \"./options\";\n\nconst hasProto = (v, constructor, predicate) => {\n  if (predicate(v, constructor.prototype)) {\n    return true;\n  } else {\n    return v.constructor?.name === constructor.name;\n  }\n};\nconst typeOf = x => {\n  const t = typeof x;\n  if (x === null) {\n    return 'null';\n  } else if (t === 'object' && Array.isArray(x)) {\n    return 'array';\n  } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n    return 'string';\n  } else {\n    return t;\n  }\n};\nconst eq$1 = t => a => t === a;\nconst isType$1 = type => value => typeOf(value) === type;\nconst isString = isType$1('string');\nconst isArray = isType$1('array');\nconst isUndefined = eq$1(undefined);\nconst isNullable = a => a === null || a === undefined;\nconst isNonNullable = a => !isNullable(a);\nconst isArrayOf = (value, pred) => {\n  if (isArray(value)) {\n    for (let i = 0, len = value.length; i < len; ++i) {\n      if (!pred(value[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\nconst nativeIndexOf = Array.prototype.indexOf;\nconst rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\nconst indexOf = (xs, x) => {\n  const r = rawIndexOf(xs, x);\n  return r === -1 ? Optional.none() : Optional.some(r);\n};\nconst noop = () => {\n  // Do nothing.\n};\n\nclass Optional {\n  constructor(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  }\n\n  static some(value) {\n    return new Optional(true, value);\n  }\n\n  static none() {\n    return Optional.singletonNone;\n  }\n\n  fold(onNone, onSome) {\n    if (this.tag) {\n      return onSome(this.value);\n    } else {\n      return onNone();\n    }\n  }\n\n  isSome() {\n    return this.tag;\n  }\n\n  isNone() {\n    return !this.tag;\n  }\n\n  map(mapper) {\n    if (this.tag) {\n      return Optional.some(mapper(this.value));\n    } else {\n      return Optional.none();\n    }\n  }\n\n  bind(binder) {\n    if (this.tag) {\n      return binder(this.value);\n    } else {\n      return Optional.none();\n    }\n  }\n\n  exists(predicate) {\n    return this.tag && predicate(this.value);\n  }\n\n  forall(predicate) {\n    return !this.tag || predicate(this.value);\n  }\n\n  filter(predicate) {\n    if (!this.tag || predicate(this.value)) {\n      return this;\n    } else {\n      return Optional.none();\n    }\n  }\n\n  getOr(replacement) {\n    return this.tag ? this.value : replacement;\n  }\n\n  or(replacement) {\n    return this.tag ? this : replacement;\n  }\n\n  getOrThunk(thunk) {\n    return this.tag ? this.value : thunk();\n  }\n\n  orThunk(thunk) {\n    return this.tag ? this : thunk();\n  }\n\n  getOrDie(message) {\n    if (!this.tag) {\n      throw new Error(message ?? 'Called getOrDie on None');\n    } else {\n      return this.value;\n    }\n  }\n\n  static from(value) {\n    return isNonNullable(value) ? Optional.some(value) : Optional.none();\n  }\n\n  getOrNull() {\n    return this.tag ? this.value : null;\n  }\n\n  getOrUndefined() {\n    return this.value;\n  }\n\n  each(worker) {\n    if (this.tag) {\n      worker(this.value);\n    }\n  }\n\n  toArray() {\n    return this.tag ? [this.value] : [];\n  }\n\n  toString() {\n    return this.tag ? `some(${this.value})` : 'none()';\n  }\n}\n\nOptional.singletonNone = new Optional(false);\n\nconst contains$1 = (str, substr, start = 0, end) => {\n  const idx = str.indexOf(substr, start);\n  if (idx !== -1) {\n    return isUndefined(end) ? true : idx + substr.length <= end;\n  } else {\n    return false;\n  }\n};\nconst removeFromStart = (str, numChars) => {\n  return str.substring(numChars);\n};\n\nconst toHex = component => {\n  const hex = component.toString(16);\n  return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n};\nconst fromRgba = rgbaColour => {\n  const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n  return hexColour(value);\n};\nconst rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i;\nconst rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?(?:\\.\\d+)?)\\s*\\)\\s*$/i;\nconst fromStringValues = (red, green, blue, alpha) => {\n  const r = parseInt(red, 10);\n  const g = parseInt(green, 10);\n  const b = parseInt(blue, 10);\n  const a = parseFloat(alpha);\n  return rgbaColour(r, g, b, a);\n};\nconst fromString = rgbaString => {\n  if (rgbaString === 'transparent') {\n    return Optional.some(rgbaColour(0, 0, 0, 0));\n  }\n  const rgbMatch = rgbRegex.exec(rgbaString);\n  if (rgbMatch !== null) {\n    return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n  }\n  const rgbaMatch = rgbaRegex.exec(rgbaString);\n  if (rgbaMatch !== null) {\n    return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n  }\n  return Optional.none();\n};\nconst removeLeading = (str, prefix) => {\n  return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n};\n\nconst checkRange = (str, substr, start) =>\n  substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n\nconst hexColour = value => ({value});\nconst shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nconst longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nconst isHexString = hex => shorthandRegex.test(hex) || longformRegex.test(hex);\nconst normalizeHex = hex => removeLeading(hex, '#').toUpperCase();\nconst fromString$1 = hex => isHexString(hex) ? Optional.some({value: normalizeHex(hex)}) : Optional.none();\nconst startsWith = (str, prefix) => {\n  return checkRange(str, prefix, 0);\n};\nconst anyToHex = color => fromString$1(color).orThunk(() => fromString(color).map(fromRgba)).getOrThunk(() => {\n  const canvas = document.createElement('canvas');\n  canvas.height = 1;\n  canvas.width = 1;\n  const canvasContext = canvas.getContext('2d');\n  canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n  canvasContext.fillStyle = '#FFFFFF';\n  canvasContext.fillStyle = color;\n  canvasContext.fillRect(0, 0, 1, 1);\n  const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n  const r = rgba[0];\n  const g = rgba[1];\n  const b = rgba[2];\n  const a = rgba[3];\n  return fromRgba(rgbaColour(r, g, b, a));\n});\nconst rgbaColour = (red, green, blue, alpha) => ({\n  red,\n  green,\n  blue,\n  alpha\n});\n\n// eslint-disable-next-line\nlet global$4 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\nconst map$2 = (xs, f) => {\n  const len = xs.length;\n  const r = new Array(len);\n  for (let i = 0; i < len; i++) {\n    const x = xs[i];\n    r[i] = f(x, i);\n  }\n  return r;\n};\n\nconst Cell = initial => {\n  let value = initial;\n  const get = () => {\n    return value;\n  };\n  const set = v => {\n    value = v;\n  };\n  return {\n    get,\n    set\n  };\n};\n\nconst fireTextColorChange = (editor, data) => {\n  editor.dispatch('TextColorChange', data);\n};\n\nconst storageName = 'tinymce-custom-colors';\nconst ColorCache = (max = 10, suffix = '') => {\n  const storageString = global$4.getItem(storageName + suffix);\n  const localstorage = isString(storageString) ? JSON.parse(storageString) : [];\n  const prune = list => {\n    const diff = max - list.length;\n    return diff < 0 ? list.slice(0, max) : list;\n  };\n  const cache = prune(localstorage);\n  const add = key => {\n    indexOf(cache, key).each(remove);\n    cache.unshift(key);\n    if (cache.length > max) {\n      cache.pop();\n    }\n    global$4.setItem(storageName, JSON.stringify(cache));\n  };\n  const remove = idx => {\n    cache.splice(idx, 1);\n  };\n  const state = () => cache.slice(0);\n  return {\n    add,\n    state\n  };\n};\n\n// eslint-disable-next-line\nconst colorCache = ColorCache(10);\n// eslint-disable-next-line\nconst colorCacheBg = ColorCache(10, '-background');\nconst mapColors = colorMap => {\n  const colors = [];\n  for (let i = 0; i < colorMap.length; i += 2) {\n    colors.push({\n      text: colorMap[i + 1],\n      value: '#' + anyToHex(colorMap[i]).value,\n      type: 'choiceitem'\n    });\n  }\n  return colors;\n};\nconst option$1 = name => editor => editor.options.get(name);\n\nconst getColorCols$1 = option$1('color_cols');\nconst getColors$3 = (editor, name) => {\n  if (name === 'bfh_forecolor') {\n    return getForecolorMap(editor);\n  }\n  return getBackcolorMap(editor);\n};\nconst getCurrentColors = (type) => map$2(type === 'bfh_forecolor' ? colorCache.state() : colorCacheBg.state(), color => ({\n  type: 'choiceitem',\n  text: color,\n  value: color\n}));\nconst addColor = color => {\n  colorCache.add(color);\n};\n\nconst fallbackColor = '#000000';\nconst hasStyleApi = node => isNonNullable(node.style);\nconst getCurrentColor = (editor, format) => {\n  let color;\n  editor.dom.getParents(editor.selection.getStart(), elm => {\n    const value = hasStyleApi(elm) ? elm.style[format === 'bfh_forecolor' ? 'color' : 'backgroundColor'] : null;\n    if (value) {\n      color = color ? color : value;\n    }\n  });\n  return Optional.from(color);\n};\nconst applyFormat = (editor, format, value) => {\n  editor.undoManager.transact(() => {\n    editor.focus();\n    editor.formatter.apply(format, {value});\n    editor.nodeChanged();\n  });\n};\nconst removeFormat = (editor, format) => {\n  editor.undoManager.transact(() => {\n    editor.focus();\n    editor.formatter.remove(format, {value: null}, undefined, true);\n    editor.nodeChanged();\n  });\n};\nconst registerCommands = editor => {\n  editor.addCommand('mceApplyTextcolor', (format, value) => {\n    applyFormat(editor, format, value);\n  });\n  editor.addCommand('mceRemoveTextcolor', format => {\n    removeFormat(editor, format);\n  });\n};\nconst getAdditionalColors = hasCustom => {\n  const type = 'choiceitem';\n  const remove = {\n    type,\n    text: 'Remove color',\n    icon: 'color-swatch-remove-color',\n    value: 'remove'\n  };\n  const custom = {\n    type,\n    text: 'Custom color',\n    icon: 'color-picker',\n    value: 'custom'\n  };\n  return hasCustom ? [\n    remove,\n    custom\n  ] : [remove];\n};\nconst applyColor = (editor, format, value, onChoice) => {\n  if (value === 'custom') {\n    const dialog = colorPickerDialog(editor);\n    dialog(colorOpt => {\n      colorOpt.each(color => {\n        addColor(color);\n        editor.execCommand('mceApplyTextcolor', format, color);\n        onChoice(color);\n      });\n    }, fallbackColor);\n  } else if (value === 'remove') {\n    onChoice('');\n    editor.execCommand('mceRemoveTextcolor', format);\n  } else {\n    onChoice(value);\n    editor.execCommand('mceApplyTextcolor', format, value);\n  }\n};\nconst getColors$1 = (colors, hasCustom, type) => colors.concat(getCurrentColors(type).concat(getAdditionalColors(hasCustom)));\nconst getFetch$1 = (colors, hasCustom, type) => callback => {\n  callback(getColors$1(colors, hasCustom, type));\n};\nconst setIconColor = (splitButtonApi, name, newColor) => {\n  const id = name === 'bfh_forecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\n  splitButtonApi.setIconFill(id, newColor);\n};\nconst registerTextColorButton = (editor, name, format, tooltip, lastColor) => {\n  let iconName, hasCustom;\n  if (name === 'bfh_forecolor') {\n    iconName = 'text-color';\n    hasCustom = isForecolorPickerOn(editor);\n  } else {\n    iconName = 'highlight-bg-color';\n    hasCustom = isBackcolorPickerOn(editor);\n  }\n  editor.ui.registry.addSplitButton(name, {\n    tooltip,\n    presets: 'color',\n    icon: iconName,\n    select: value => {\n      const optCurrentRgb = getCurrentColor(editor, format);\n      return optCurrentRgb.bind(currentRgb => fromString(currentRgb).map(rgba => {\n        const currentHex = fromRgba(rgba).value;\n        return contains$1(value.toLowerCase(), currentHex);\n      })).getOr(false);\n    },\n    columns: getColorCols$1(editor),\n    fetch: getFetch$1(getColors$3(editor, name), hasCustom, name),\n    onAction: () => {\n      applyColor(editor, format, lastColor.get(), noop);\n    },\n    onItemAction: (_splitButtonApi, value) => {\n      applyColor(editor, format, value, newColor => {\n        lastColor.set(newColor);\n        fireTextColorChange(editor, {\n          name,\n          color: newColor\n        });\n      });\n    },\n    onSetup: splitButtonApi => {\n      setIconColor(splitButtonApi, name, lastColor.get());\n      const handler = e => {\n        if (e.name === name) {\n          setIconColor(splitButtonApi, e.name, e.color);\n        }\n      };\n      editor.on('TextColorChange', handler);\n      return () => {\n        editor.off('TextColorChange', handler);\n      };\n    }\n  });\n};\nconst registerTextColorMenuItem = (editor, name, format, text) => {\n  editor.ui.registry.addNestedMenuItem(name, {\n    text,\n    icon: name === 'bfh_forecolor' ? 'text-color' : 'highlight-bg-color',\n    getSubmenuItems: () => [{\n      type: 'fancymenuitem',\n      fancytype: 'colorswatch',\n      initData: {\n        allowCustomColors: name === 'bfh_forecolor' ? isForecolorPickerOn(editor) : isBackcolorPickerOn(editor),\n        colors: getColors$3(editor, name),\n      },\n      onAction: data => {\n        applyColor(editor, format, data.value, noop);\n      }\n    }]\n  });\n};\nconst colorPickerDialog = editor => (callback, value) => {\n  let isValid = false;\n  const onSubmit = api => {\n    const data = api.getData();\n    const hex = data.colorpicker;\n    if (isValid) {\n      callback(Optional.from(hex));\n      api.close();\n    } else {\n      editor.windowManager.alert(editor.translate([\n        'Invalid hex color code: {0}',\n        hex\n      ]));\n    }\n  };\n  const onAction = (_api, details) => {\n    if (details.name === 'hex-valid') {\n      isValid = details.value;\n    }\n  };\n  const initialData = {colorpicker: value};\n  editor.windowManager.open({\n    title: 'Color Picker',\n    size: 'normal',\n    body: {\n      type: 'panel',\n      items: [{\n        type: 'colorpicker',\n        name: 'colorpicker',\n        label: 'Color'\n      }]\n    },\n    buttons: [\n      {\n        type: 'cancel',\n        name: 'cancel',\n        text: 'Cancel'\n      },\n      {\n        type: 'submit',\n        name: 'save',\n        text: 'Save',\n        primary: true\n      }\n    ],\n    initialData,\n    onAction,\n    onSubmit,\n    onClose: noop,\n    onCancel: () => {\n      callback(Optional.none());\n    }\n  });\n};\nconst register$c = editor => {\n  if (!isForecolorPickerOn(editor) && !isBackcolorPickerOn(editor)\n    && getForecolorMap(editor).length === 0 && getBackcolorMap(editor).length === 0) {\n    return;\n  }\n  registerCommands(editor);\n  if (isForecolorPickerOn(editor) || getForecolorMap(editor).length > 0) {\n    // eslint-disable-next-line\n    const lastForeColor = Cell(fallbackColor);\n    registerTextColorButton(editor, 'bfh_forecolor', 'forecolor', 'Text color', lastForeColor);\n    registerTextColorMenuItem(editor, 'bfh_forecolor', 'forecolor', 'Text color');\n  }\n  if (isBackcolorPickerOn(editor) || getBackcolorMap(editor).length > 0) {\n    // eslint-disable-next-line\n    const lastBackColor = Cell(fallbackColor);\n    registerTextColorButton(editor, 'bfh_backcolor', 'hilitecolor', 'Background color', lastBackColor);\n    registerTextColorMenuItem(editor, 'bfh_backcolor', 'hilitecolor', 'Background color');\n  }\n};\n\nexport {\n  registerTextColorButton,\n  register$c,\n  isArrayOf,\n  isString,\n  mapColors\n};"],"names":["isType$1","type","value","x","t","Array","isArray","o","v","proto","constructor","String","prototype","isPrototypeOf","_v$constructor","name","hasProto","typeOf","isString","_exports","isUndefined","undefined","a","isNonNullable","isNullable","isArrayOf","pred","i","len","length","nativeIndexOf","indexOf","xs","r","rawIndexOf","ts","call","Optional","none","some","noop","tag","this","static","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","getOrNull","getOrUndefined","each","worker","toArray","toString","concat","toHex","component","hex","toUpperCase","fromRgba","rgbaColour","red","green","blue","hexColour","rgbRegex","rgbaRegex","fromStringValues","alpha","parseInt","g","b","parseFloat","fromString","rgbaString","rgbMatch","exec","rgbaMatch","shorthandRegex","longformRegex","normalizeHex","removeLeading","str","prefix","startsWith","removeFromStart","numChars","substring","fromString$1","test","isHexString","checkRange","substr","start","anyToHex","color","canvas","document","createElement","height","width","canvasContext","getContext","clearRect","fillStyle","fillRect","rgba","getImageData","data","global$4","tinymce","util","Tools","resolve","Cell","initial","get","set","storageName","ColorCache","max","arguments","suffix","storageString","getItem","localstorage","JSON","parse","cache","list","slice","remove","idx","splice","add","key","unshift","pop","setItem","stringify","state","colorCache","colorCacheBg","mapColors","colorMap","colors","push","text","getColorCols$1","editor","options","getColors$3","getForecolorMap","getBackcolorMap","getCurrentColors","map$2","f","getCurrentColor","format","dom","getParents","selection","getStart","elm","style","from","applyColor","onChoice","colorPickerDialog","dialog","colorOpt","addColor","execCommand","getFetch$1","hasCustom","callback","getColors$1","icon","getAdditionalColors","setIconColor","splitButtonApi","newColor","id","setIconFill","registerTextColorButton","tooltip","lastColor","iconName","isForecolorPickerOn","isBackcolorPickerOn","ui","registry","addSplitButton","presets","select","currentRgb","currentHex","end","contains$1","toLowerCase","columns","fetch","onAction","onItemAction","_splitButtonApi","fireTextColorChange","dispatch","onSetup","handler","e","on","off","registerTextColorMenuItem","addNestedMenuItem","getSubmenuItems","fancytype","initData","allowCustomColors","isValid","initialData","colorpicker","windowManager","open","title","size","body","items","label","buttons","primary","_api","details","onSubmit","api","getData","close","alert","translate","onClose","onCancel","register$c","addCommand","applyFormat","undoManager","transact","focus","formatter","apply","nodeChanged","removeFormat","registerCommands","lastForeColor","lastBackColor"],"mappings":"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"}