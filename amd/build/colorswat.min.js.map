{"version":3,"file":"colorswat.min.js","sources":["../src/colorswat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Color palette setter for BFH Fontcolor plugin.\n *\n * @module      tiny_equation/options\n * @copyright   2023 Luca BÃ¶sch <luca.boesch@bfh.ch>\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// ESLint directives.\n\nimport {getBackcolorMap, getForecolorMap, isBackcolorPickerOn, isForecolorPickerOn} from \"./options\";\n\nconst hasProto = (v, constructor, predicate) => {\n  if (predicate(v, constructor.prototype)) {\n    return true;\n  } else {\n    return v.constructor?.name === constructor.name;\n  }\n};\nconst typeOf = x => {\n  const t = typeof x;\n  if (x === null) {\n    return 'null';\n  } else if (t === 'object' && Array.isArray(x)) {\n    return 'array';\n  } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n    return 'string';\n  } else {\n    return t;\n  }\n};\nconst eq$1 = t => a => t === a;\nconst isType$1 = type => value => typeOf(value) === type;\nconst isString = isType$1('string');\nconst isArray = isType$1('array');\nconst isUndefined = eq$1(undefined);\nconst isNullable = a => a === null || a === undefined;\nconst isNonNullable = a => !isNullable(a);\nconst isArrayOf = (value, pred) => {\n  if (isArray(value)) {\n    for (let i = 0, len = value.length; i < len; ++i) {\n      if (!pred(value[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\nconst nativeIndexOf = Array.prototype.indexOf;\nconst rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\nconst indexOf = (xs, x) => {\n  const r = rawIndexOf(xs, x);\n  return r === -1 ? Optional.none() : Optional.some(r);\n};\nconst noop = () => {\n  // Do nothing.\n};\n\nclass Optional {\n  constructor(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  }\n\n  static some(value) {\n    return new Optional(true, value);\n  }\n\n  static none() {\n    return Optional.singletonNone;\n  }\n\n  fold(onNone, onSome) {\n    if (this.tag) {\n      return onSome(this.value);\n    } else {\n      return onNone();\n    }\n  }\n\n  isSome() {\n    return this.tag;\n  }\n\n  isNone() {\n    return !this.tag;\n  }\n\n  map(mapper) {\n    if (this.tag) {\n      return Optional.some(mapper(this.value));\n    } else {\n      return Optional.none();\n    }\n  }\n\n  bind(binder) {\n    if (this.tag) {\n      return binder(this.value);\n    } else {\n      return Optional.none();\n    }\n  }\n\n  exists(predicate) {\n    return this.tag && predicate(this.value);\n  }\n\n  forall(predicate) {\n    return !this.tag || predicate(this.value);\n  }\n\n  filter(predicate) {\n    if (!this.tag || predicate(this.value)) {\n      return this;\n    } else {\n      return Optional.none();\n    }\n  }\n\n  getOr(replacement) {\n    return this.tag ? this.value : replacement;\n  }\n\n  or(replacement) {\n    return this.tag ? this : replacement;\n  }\n\n  getOrThunk(thunk) {\n    return this.tag ? this.value : thunk();\n  }\n\n  orThunk(thunk) {\n    return this.tag ? this : thunk();\n  }\n\n  getOrDie(message) {\n    if (!this.tag) {\n      throw new Error(message ?? 'Called getOrDie on None');\n    } else {\n      return this.value;\n    }\n  }\n\n  static from(value) {\n    return isNonNullable(value) ? Optional.some(value) : Optional.none();\n  }\n\n  getOrNull() {\n    return this.tag ? this.value : null;\n  }\n\n  getOrUndefined() {\n    return this.value;\n  }\n\n  each(worker) {\n    if (this.tag) {\n      worker(this.value);\n    }\n  }\n\n  toArray() {\n    return this.tag ? [this.value] : [];\n  }\n\n  toString() {\n    return this.tag ? `some(${this.value})` : 'none()';\n  }\n}\n\nOptional.singletonNone = new Optional(false);\n\nconst contains$1 = (str, substr, start = 0, end) => {\n  const idx = str.indexOf(substr, start);\n  if (idx !== -1) {\n    return isUndefined(end) ? true : idx + substr.length <= end;\n  } else {\n    return false;\n  }\n};\nconst removeFromStart = (str, numChars) => {\n  return str.substring(numChars);\n};\n\nconst toHex = component => {\n  const hex = component.toString(16);\n  return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n};\nconst fromRgba = rgbaColour => {\n  const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n  return hexColour(value);\n};\nconst rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i;\nconst rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?(?:\\.\\d+)?)\\s*\\)\\s*$/i;\nconst fromStringValues = (red, green, blue, alpha) => {\n  const r = parseInt(red, 10);\n  const g = parseInt(green, 10);\n  const b = parseInt(blue, 10);\n  const a = parseFloat(alpha);\n  return rgbaColour(r, g, b, a);\n};\nconst fromString = rgbaString => {\n  if (rgbaString === 'transparent') {\n    return Optional.some(rgbaColour(0, 0, 0, 0));\n  }\n  const rgbMatch = rgbRegex.exec(rgbaString);\n  if (rgbMatch !== null) {\n    return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n  }\n  const rgbaMatch = rgbaRegex.exec(rgbaString);\n  if (rgbaMatch !== null) {\n    return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n  }\n  return Optional.none();\n};\nconst removeLeading = (str, prefix) => {\n  return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n};\n\nconst checkRange = (str, substr, start) =>\n  substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n\nconst hexColour = value => ({value});\nconst shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nconst longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nconst isHexString = hex => shorthandRegex.test(hex) || longformRegex.test(hex);\nconst normalizeHex = hex => removeLeading(hex, '#').toUpperCase();\nconst fromString$1 = hex => isHexString(hex) ? Optional.some({value: normalizeHex(hex)}) : Optional.none();\nconst startsWith = (str, prefix) => {\n  return checkRange(str, prefix, 0);\n};\nconst anyToHex = color => fromString$1(color).orThunk(() => fromString(color).map(fromRgba)).getOrThunk(() => {\n  const canvas = document.createElement('canvas');\n  canvas.height = 1;\n  canvas.width = 1;\n  const canvasContext = canvas.getContext('2d');\n  canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n  canvasContext.fillStyle = '#FFFFFF';\n  canvasContext.fillStyle = color;\n  canvasContext.fillRect(0, 0, 1, 1);\n  const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n  const r = rgba[0];\n  const g = rgba[1];\n  const b = rgba[2];\n  const a = rgba[3];\n  return fromRgba(rgbaColour(r, g, b, a));\n});\nconst rgbaColour = (red, green, blue, alpha) => ({\n  red,\n  green,\n  blue,\n  alpha\n});\n\n// eslint-disable-next-line\nlet global$4 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\nconst map$2 = (xs, f) => {\n  const len = xs.length;\n  const r = new Array(len);\n  for (let i = 0; i < len; i++) {\n    const x = xs[i];\n    r[i] = f(x, i);\n  }\n  return r;\n};\n\nconst Cell = initial => {\n  let value = initial;\n  const get = () => {\n    return value;\n  };\n  const set = v => {\n    value = v;\n  };\n  return {\n    get,\n    set\n  };\n};\n\nconst fireTextColorChange = (editor, data) => {\n  editor.dispatch('TextColorChange', data);\n};\n\nconst storageName = 'tinymce-custom-colors';\nconst ColorCache = (max = 10, suffix = '') => {\n  const storageString = global$4.getItem(storageName + suffix);\n  const localstorage = isString(storageString) ? JSON.parse(storageString) : [];\n  const prune = list => {\n    const diff = max - list.length;\n    return diff < 0 ? list.slice(0, max) : list;\n  };\n  const cache = prune(localstorage);\n  const add = key => {\n    indexOf(cache, key).each(remove);\n    cache.unshift(key);\n    if (cache.length > max) {\n      cache.pop();\n    }\n    global$4.setItem(storageName, JSON.stringify(cache));\n  };\n  const remove = idx => {\n    cache.splice(idx, 1);\n  };\n  const state = () => cache.slice(0);\n  return {\n    add,\n    state\n  };\n};\n\n// eslint-disable-next-line\nconst colorCache = ColorCache(10);\n// eslint-disable-next-line\nconst colorCacheBg = ColorCache(10, '-background');\nconst mapColors = colorMap => {\n  const colors = [];\n  for (let i = 0; i < colorMap.length; i += 2) {\n    colors.push({\n      text: colorMap[i + 1],\n      value: '#' + anyToHex(colorMap[i]).value,\n      type: 'choiceitem'\n    });\n  }\n  return colors;\n};\nconst option$1 = name => editor => editor.options.get(name);\n\nconst getColorCols$1 = option$1('color_cols');\nconst getColors$3 = (editor, name) => {\n  if (name === 'bfh_forecolor') {\n    return getForecolorMap(editor);\n  }\n  return getBackcolorMap(editor);\n};\nconst getCurrentColors = (type) => map$2(type === 'bfh_forecolor' ? colorCache.state() : colorCacheBg.state(), color => ({\n  type: 'choiceitem',\n  text: color,\n  value: color\n}));\nconst addColor = color => {\n  colorCache.add(color);\n};\n\nconst fallbackColor = '#000000';\nconst hasStyleApi = node => isNonNullable(node.style);\nconst getCurrentColor = (editor, format) => {\n  let color;\n  editor.dom.getParents(editor.selection.getStart(), elm => {\n    const value = hasStyleApi(elm) ? elm.style[format === 'bfh_forecolor' ? 'color' : 'backgroundColor'] : null;\n    if (value) {\n      color = color ? color : value;\n    }\n  });\n  return Optional.from(color);\n};\nconst applyFormat = (editor, format, value) => {\n  editor.undoManager.transact(() => {\n    editor.focus();\n    editor.formatter.apply(format, {value});\n    editor.nodeChanged();\n  });\n};\nconst removeFormat = (editor, format) => {\n  editor.undoManager.transact(() => {\n    editor.focus();\n    editor.formatter.remove(format, {value: null}, undefined, true);\n    editor.nodeChanged();\n  });\n};\nconst registerCommands = editor => {\n  editor.addCommand('mceApplyTextcolor', (format, value) => {\n    applyFormat(editor, format, value);\n  });\n  editor.addCommand('mceRemoveTextcolor', format => {\n    removeFormat(editor, format);\n  });\n};\nconst getAdditionalColors = hasCustom => {\n  const type = 'choiceitem';\n  const remove = {\n    type,\n    text: 'Remove color',\n    icon: 'color-swatch-remove-color',\n    value: 'remove'\n  };\n  const custom = {\n    type,\n    text: 'Custom color',\n    icon: 'color-picker',\n    value: 'custom'\n  };\n  return hasCustom ? [\n    remove,\n    custom\n  ] : [remove];\n};\nconst applyColor = (editor, format, value, onChoice) => {\n  if (value === 'custom') {\n    const dialog = colorPickerDialog(editor);\n    dialog(colorOpt => {\n      colorOpt.each(color => {\n        addColor(color);\n        editor.execCommand('mceApplyTextcolor', format, color);\n        onChoice(color);\n      });\n    }, fallbackColor);\n  } else if (value === 'remove') {\n    onChoice('');\n    editor.execCommand('mceRemoveTextcolor', format);\n  } else {\n    onChoice(value);\n    editor.execCommand('mceApplyTextcolor', format, value);\n  }\n};\nconst getColors$1 = (colors, hasCustom, type) => colors.concat(getCurrentColors(type).concat(getAdditionalColors(hasCustom)));\nconst getFetch$1 = (colors, hasCustom, type) => callback => {\n  callback(getColors$1(colors, hasCustom, type));\n};\nconst setIconColor = (splitButtonApi, name, newColor) => {\n  const id = name === 'bfh_forecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\n  splitButtonApi.setIconFill(id, newColor);\n};\nconst registerTextColorButton = (editor, name, format, tooltip, lastColor) => {\n  let iconName, hasCustom;\n  if (name === 'bfh_forecolor') {\n    iconName = 'text-color';\n    hasCustom = isForecolorPickerOn(editor);\n  } else {\n    iconName = 'highlight-bg-color';\n    hasCustom = isBackcolorPickerOn(editor);\n  }\n  editor.ui.registry.addSplitButton(name, {\n    tooltip,\n    presets: 'color',\n    icon: iconName,\n    select: value => {\n      const optCurrentRgb = getCurrentColor(editor, format);\n      return optCurrentRgb.bind(currentRgb => fromString(currentRgb).map(rgba => {\n        const currentHex = fromRgba(rgba).value;\n        return contains$1(value.toLowerCase(), currentHex);\n      })).getOr(false);\n    },\n    columns: getColorCols$1(editor),\n    fetch: getFetch$1(getColors$3(editor, name), hasCustom, name),\n    onAction: () => {\n      applyColor(editor, format, lastColor.get(), noop);\n    },\n    onItemAction: (_splitButtonApi, value) => {\n      applyColor(editor, format, value, newColor => {\n        lastColor.set(newColor);\n        fireTextColorChange(editor, {\n          name,\n          color: newColor\n        });\n      });\n    },\n    onSetup: splitButtonApi => {\n      setIconColor(splitButtonApi, name, lastColor.get());\n      const handler = e => {\n        if (e.name === name) {\n          setIconColor(splitButtonApi, e.name, e.color);\n        }\n      };\n      editor.on('TextColorChange', handler);\n      return () => {\n        editor.off('TextColorChange', handler);\n      };\n    }\n  });\n};\nconst registerTextColorMenuItem = (editor, name, format, text) => {\n  editor.ui.registry.addNestedMenuItem(name, {\n    text,\n    icon: name === 'bfh_forecolor' ? 'text-color' : 'highlight-bg-color',\n    getSubmenuItems: () => [{\n      type: 'fancymenuitem',\n      fancytype: 'colorswatch',\n      initData: {\n        allowCustomColors: name === 'bfh_forecolor' ? isForecolorPickerOn(editor) : isBackcolorPickerOn(editor),\n        colors: getColors$3(editor, name),\n      },\n      onAction: data => {\n        applyColor(editor, format, data.value, noop);\n      }\n    }]\n  });\n};\nconst colorPickerDialog = editor => (callback, value) => {\n  let isValid = false;\n  const onSubmit = api => {\n    const data = api.getData();\n    const hex = data.colorpicker;\n    if (isValid) {\n      callback(Optional.from(hex));\n      api.close();\n    } else {\n      editor.windowManager.alert(editor.translate([\n        'Invalid hex color code: {0}',\n        hex\n      ]));\n    }\n  };\n  const onAction = (_api, details) => {\n    if (details.name === 'hex-valid') {\n      isValid = details.value;\n    }\n  };\n  const initialData = {colorpicker: value};\n  editor.windowManager.open({\n    title: 'Color Picker',\n    size: 'normal',\n    body: {\n      type: 'panel',\n      items: [{\n        type: 'colorpicker',\n        name: 'colorpicker',\n        label: 'Color'\n      }]\n    },\n    buttons: [\n      {\n        type: 'cancel',\n        name: 'cancel',\n        text: 'Cancel'\n      },\n      {\n        type: 'submit',\n        name: 'save',\n        text: 'Save',\n        primary: true\n      }\n    ],\n    initialData,\n    onAction,\n    onSubmit,\n    onClose: noop,\n    onCancel: () => {\n      callback(Optional.none());\n    }\n  });\n};\nconst register$c = editor => {\n  if (!isForecolorPickerOn(editor) && !isBackcolorPickerOn(editor)\n    && getForecolorMap(editor).length === 0 && getBackcolorMap(editor).length === 0) {\n    return;\n  }\n  registerCommands(editor);\n  if (isForecolorPickerOn(editor) || getForecolorMap(editor).length > 0) {\n    // eslint-disable-next-line\n    const lastForeColor = Cell(fallbackColor);\n    registerTextColorButton(editor, 'bfh_forecolor', 'forecolor', 'Text color', lastForeColor);\n    registerTextColorMenuItem(editor, 'bfh_forecolor', 'forecolor', 'Text color');\n  }\n  if (isBackcolorPickerOn(editor) || getBackcolorMap(editor).length > 0) {\n    // eslint-disable-next-line\n    const lastBackColor = Cell(fallbackColor);\n    registerTextColorButton(editor, 'bfh_backcolor', 'hilitecolor', 'Background color', lastBackColor);\n    registerTextColorMenuItem(editor, 'bfh_backcolor', 'hilitecolor', 'Background color');\n  }\n};\n\nexport {\n  registerTextColorButton,\n  register$c,\n  isArrayOf,\n  isString,\n  mapColors\n};"],"names":["isType$1","type","value","x","t","Array","isArray","o","v","proto","constructor","String","prototype","isPrototypeOf","name","typeOf","isString","isUndefined","undefined","a","isNonNullable","isNullable","pred","i","len","length","nativeIndexOf","indexOf","xs","r","ts","call","rawIndexOf","Optional","none","some","noop","tag","singletonNone","fold","onNone","onSome","this","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","getOrNull","getOrUndefined","each","worker","toArray","toString","toHex","component","hex","toUpperCase","fromRgba","rgbaColour","red","green","blue","hexColour","rgbRegex","rgbaRegex","fromStringValues","alpha","parseInt","g","b","parseFloat","fromString","rgbaString","rgbMatch","exec","rgbaMatch","shorthandRegex","longformRegex","normalizeHex","removeLeading","str","prefix","startsWith","numChars","substring","removeFromStart","fromString$1","test","isHexString","substr","start","checkRange","anyToHex","color","canvas","document","createElement","height","width","canvasContext","getContext","clearRect","fillStyle","fillRect","rgba","getImageData","data","global$4","tinymce","util","Tools","resolve","Cell","initial","get","set","storageName","ColorCache","max","suffix","storageString","getItem","localstorage","JSON","parse","prune","list","slice","cache","add","key","remove","unshift","pop","setItem","stringify","idx","splice","state","colorCache","colorCacheBg","colorMap","colors","push","text","getColorCols$1","editor","options","getColors$3","getCurrentColors","f","map$2","getCurrentColor","format","dom","getParents","selection","getStart","elm","style","from","applyColor","onChoice","colorPickerDialog","dialog","colorOpt","addColor","execCommand","getFetch$1","hasCustom","callback","concat","icon","getAdditionalColors","getColors$1","setIconColor","splitButtonApi","newColor","id","setIconFill","registerTextColorButton","tooltip","lastColor","iconName","ui","registry","addSplitButton","presets","select","currentRgb","currentHex","end","contains$1","toLowerCase","columns","fetch","onAction","onItemAction","_splitButtonApi","dispatch","fireTextColorChange","onSetup","handler","e","on","off","registerTextColorMenuItem","addNestedMenuItem","getSubmenuItems","fancytype","initData","allowCustomColors","isValid","initialData","colorpicker","windowManager","open","title","size","body","items","label","buttons","primary","_api","details","onSubmit","api","getData","close","alert","translate","onClose","onCancel","addCommand","undoManager","transact","focus","formatter","apply","nodeChanged","applyFormat","removeFormat","registerCommands","lastForeColor","lastBackColor"],"mappings":"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"}